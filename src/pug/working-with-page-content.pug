extends layouts/default.pug

block content
  main
    h1 Working with Page Content - 
      a(href="working.html") Working Examples

    h6 Basic Selectors

    p There are various ways to select content on a page with JQuery. The syntax is typically 
      span.code $('tagName')
      |to select content based on the tag name or other types of selectors.

    +codeMulti('Javascript', '$(".className")', '$("tag.className")', '$("tag#id.className")')

    h6 Basic Filters

    p Several basic filters exist within JQuery. These include:

    table(cellspacing=0)
      thead
        tr
          th Filter...
          th Selects...
      tbody
        tr
          td :first, :last
          td first or last of a given selectors type
        tr
          td :even, :odd
          td only even or odd items selected
        tr
          td :gt(), :lt(), :eq()
          td items greater than, less than, or equal to an index
        tr
          td :animated
          td items that are in the process of being animated
        tr
          td :focus
          td the element that currently has focus
        tr
          td :not(expr)
          td elements that don't match the given expression

    p Filters can be applied by appending them to the items targeted in the selection.

    +codeMulti('Javascript', '$("#example p:not(p:eq(2))").css("color", "red");')

    h6 Advanced Selectors

    p These types of selectors take advantage of some of the advanced CSS selectors. Examples include the immediate child selector 
      span.code div > p
      |or the general descendant selector 
      span.code div p
      |or the next adjacent selector (select the element on the same level and immediately after the first element) 
      span.code ul + div
      |or the next sibling selector  (select all elements that come after the first selector) 
      span.code ul ~ p

    +codeMulti('Javascript', '$("#example > p").css("color", "red");')

    h6 Attribute Selectors

    p JQuery has the ability to select based on the presence of attributes. Using selector indicators like 
      span.code ^
      |for starts with or 
      span.code *
      |for contains the text it's possible to select on a very specific level.

    +codeMulti('Javascript', '$("p[class]").css("color", "red");', '$("p[id=para1]").css("color", "green");', '$("p[id^=para]").css("color", "yellow");', '$("p[id^=para][lang*=en-").css("color", "yellow");')

    h6 Advanced Filters

    p There are several advanced filters that allow more complex filtering of selectors.

    table(cellspacing=0)
      thead
        tr
          th Filter...
          th Selects...
      tbody
        tr
          td :contains()
          td searches text for matches of contains argument
        tr
          td :parent
          td selects element that has at least one other element or text in it will be selected
        tr
          td :has()
          td look for elements that have the argument specified
        tr
          td :first-child
          td selects elements that are the first child within their element
        tr
          td :last-of-type
          td selects element that is last of type within its parent container
        tr
          td :nth-child()
          td selects the element within the parent that is the nth index child (1-based index) - can use a number or values such as 2n for every 2nd element

    +codeMulti('Javascript', '$("div p:first-child").css("color", "blue");', '$("section.five-page-content p:contains(\'hammer\')").css("color", "red");')

    h6 Traversing Documents

    p There are several built-in ways to traverse elements. Some of these include
      span.code .prev()
      |, 
      span.code .next()
      |, 
      span.code .parent()
      |, and 
      span.code .parentUntil()
      |, and 
      span.code .children()
      |.

    +codeMulti('Javascript', '$("div.owner").children().css("color", "red");', '$("#contact").next().css("color", "red");')

    p A versatile tool is the 
      span.code .find()
      |function. It will find the element specified.

    +codeMulti('Javascript', '$("div").find("p").css("color", "red");')

    p Another important function is the each function. This will allow each element selected to be acted upon in unique ways. The 
      span.code .each()
      |callback function accepts two arguments - index of the current element and the element itself.

    +codeMulti('Javascript', '$("#example p").each(function(index, elem) {', '  $(elem).css("color", "green");', '}')

    h6 Statement Chaining

    p A core concept in JQuery is the ability to chain together several functions in a single line of code that do multiple things at once.

    +codeMulti('Javascript', '$("element").fn1().fn2().fn3();')